services:
  doc:
    image: retypeapp/retype:3.5-ubuntu
    container_name: gestsis-doc
    restart: unless-stopped
    tty: true
    working_dir: /app
    ports:
      - 8081:8081
    volumes:
      - ./GestSIS_Doc:/app
      - /app/node_modules
    networks:
      - gestsis
    command: retype start --port=8081

  app:
    build:
      context: ./GestSIS_APP
      dockerfile: Dockerfile
    image: vue-dev:2.1
    container_name: gestsis-app
    restart: unless-stopped
    tty: true
    working_dir: /app
    ports:
      - 8080:8080
    volumes:
      - ./GestSIS_APP:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - gestsis
    command: sh -c "cd /app/src && yarn install && yarn dev --host --port=8080"
    # depends_on:
    #   - api
    #   - auth

  api:
    build:
      context: ./GestSIS_API
      dockerfile: Dockerfile
    image: laravel-api:2.5
    container_name: gestsis-api
    restart: unless-stopped
    tty: true
    working_dir: /app
    ports:
      - 8000:8000
      - 5000:5000
    volumes:
      - ./GestSIS_API:/app
    networks:
      - gestsis
    depends_on:
      - db
    command: bash -c "composer install && php artisan dbs:init && php artisan serve --host=0.0.0.0 --port=8000"

  auth:
    build:
      context: ./GestSIS_Auth
      dockerfile: Dockerfile
    image: laravel-auth:2.3
    container_name: gestsis-auth
    restart: unless-stopped
    tty: true
    working_dir: /app
    ports:
      - 8001:8001
    volumes:
      - ./GestSIS_Auth:/app
    networks:
      - gestsis
    depends_on:
      - db
    command: bash -c "composer install && php artisan migrate:fresh --seed && php artisan serve --host=0.0.0.0 --port=8001"

  print:
    build:
      context: ./GestSIS_Print
      dockerfile: Dockerfile
    image: node-dev:1.5
    container_name: gestsis-print
    restart: unless-stopped
    tty: true
    working_dir: /app
    ports:
      - 3000:3000
    volumes:
      - ./GestSIS_Print:/app
      - /app/node_modules
    networks:
      - gestsis
    command: sh -c "yarn && yarn dev"

  alarm:
    build:
      context: ./GestSIS_Alarm
      dockerfile: Dockerfile
    image: python-dev:1.3
    container_name: gestsis-alarm
    restart: unless-stopped
    tty: true
    working_dir: /app
    ports:
      - 8002:8002
    volumes:
      - ./GestSIS_Alarm:/app
    networks:
      - gestsis
    command: >
      sh -c "pip install -r requirements.txt && python _scripts/init.py -f && python manage.py migrate && python manage.py loaddata sis && python manage.py runserver 0.0.0.0:8002"

  db:
    image: mysql:8.1
    container_name: gestsis-db
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: gestsis
      MYSQL_ROOT_PASSWORD: pwd
      MYSQL_PASSWORD: pwd
      MYSQL_USER: gestsis
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
    networks:
      - gestsis

networks:
  gestsis:
    driver: bridge
